[{"path":"https://SwissTPH.github.io/AnophelesBionomics/articles/AnophelesBionomics.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"AnophelesBionomics","text":"R package provides tools estimate key bionomics parameters mosquitoe species using Bayesian hierarchical model borrows strength across taxonomic levels (species, species complex, genus). prepare standardize input data using taxonomy-aware filtering functions. fit robust Bayesian hierarchical model using rstan. better understand observed patterns, visualize data distributions species complex. Finally, explore posterior parameter distributions using static density plots generated ggplot2, well interactive charts built plotly intuitive inspection. Even species-specific data missing, model can infer parameter values using information related taxa, thanks taxonomic structure. approach combines internal datasets included package user-provided external data estimation relies -U-Turn Sampler (NUTS) implemented via rstan, includes tools data preparation, posterior diagnostics, interactive visualization. model focuses estimating following mosquito-related parameters: parous_rate: Proportion parous females observed females. endophagy: Proportion mosquitoes biting indoors versus outdoors. endophily: Proportion mosquitoes resting indoors blood-fed. HBI: Human blood inde, proportion human blood blood meal ingested mosquitoes. indoor_HBI: Human blood index mosquitoes collected indoors outdoor_HBI: Human blood index mosquitoes collected outdoors. sac_rate: Proportion parous females oviposited less 24 hours collected. necessary optional packages required run package listed appendix.","code":""},{"path":[]},{"path":"https://SwissTPH.github.io/AnophelesBionomics/articles/AnophelesBionomics.html","id":"adding-and-cleaning-data","dir":"Articles","previous_headings":"How to use the package","what":"Adding and cleaning Data","title":"AnophelesBionomics","text":"creation_df() function designed preprocess raw entomological data Bayesian modeling mosquito bionomic traits. use , user simply specifies variable interest — Human Blood Index (HBI), endophagy, endophily — via varname argument. variable corresponds specific mosquito bionomics basic use, varname required: executed, function returns informative messages console : reports number observations retained filtering (e.g., “Total observations: 90”) verifies internal consistency data structure checking denominators always greater equal numerators proportion calculations (e.g., “denominator always larger equal numerator: good!”). checks help ensure data integrity downstream analysis. Optionally, users can apply geographic temporal filters refine dataset. geo parameter allows restriction specific regions. Available region codes “Africa-E” (Eastern Africa), “Africa-W” (Western Africa), “Americas”, “Asia-Pacific”, NA unspecified global studies. year_min year_max parameters allow filtering study period, based year data collection: Internally, function filters dataset according selected region(s) time period, extracts relevant observations chosen bionomic parameter, calculates proportions needed. excludes studies suitable behavioral inference, handles data insecticide intervention contexts, harmonizes mosquito species names. Species also grouped complexes appropriate, enabling hierarchical modeling. addition using internal data, users can also integrate external dataset supplying extern_data argument. allows appending custom observations internal database preprocessing. external data must match internal structure terms column names data types. rules formatting external dataset provided Appendix. ’s minimal working example external data parous_rate trait: can include data main function call follows: external data automatically combined internal dataset preprocessing. required columns missing extern_data, function still run exclude external data rows missing necessary columns, display message specifying columns missing. allows internal data processed normally warning user incomplete external data. Make sure dataset follows expected structure (see Appendix complete column specification) ensure full integration external observations. output named list containing four elements: (1) data.req, fully cleaned filtered dataset, (2) nice_varname, human-readable label suitable outputs, (3) species_complex, reference table mapping species species complexes numeric identifiers, (4) varname, name selected mosquito bionomic parameter. function ensures consistent reproducible preparation entomological data, focusing single mosquito trait per run, optimized integration Bayesian analysis pipelines.","code":"data <- creation_df(\"endophily\") #> [1] \"Total observations: 38\" #> [1] \"denominator is always larger or equal to numerator: good!\" data <- creation_df(varname = \"parous_rate\",                     geo = c(\"Africa-W\", \"Americas\"),                     year_min = 1900,                     year_max = 2020) #> [1] \"Total observations: 226\" #> [1] \"denominator is always larger or equal to numerator: good!\" extern_data <- data.frame(   species = c(\"Anopheles arabiensis\", \"Anopheles arabiensis\"),   insecticide_control = c(\"f\", \"f\"),   country = c(\"Benin\", \"Benin\"),   year_start = c(2010, 2012),   parity_n = c(45, 30),   parity_total = c(100, 60),   parity_percent = c(45, 50),   stringsAsFactors = FALSE ) data <- creation_df(varname = \"parous_rate\",                     geo = c(\"Africa-W\", \"Americas\"),                     year_min = 1900,                     year_max = 2020, extern_data = extern_data) #> [1] \"Total observations: 228\" #> [1] \"denominator is always larger or equal to numerator: good!\""},{"path":"https://SwissTPH.github.io/AnophelesBionomics/articles/AnophelesBionomics.html","id":"data-visualisation","dir":"Articles","previous_headings":"How to use the package","what":"Data Visualisation","title":"AnophelesBionomics","text":"function obs_complex_species_pie() allows users visualize distribution mosquito observations species complex interactive pie chart. function calculates observation proportions consolidates species low representation “” category based user-defined threshold. Additionally, resulting visualization can saved standalone HTML file directory specified. hovering slice, detailed information displayed, including species complex name, total number observations, number survey rows, mean standard deviation observed values, proportion total. function expects input list structured output creation_df() function, contains cleaned data frame observation counts identified variable name pattern, base name variable, user-friendly label output naming. user can adjust minimum proportion threshold determines rare species grouped together. example, setting threshold 0.05 means categories whose combined total accounts 5% less observations grouped “”. Finally user can chose path order save pie. instance, preparing data using preprocessing pipeline, user might call: Similarly, obs_region_pie() generates interactive pie chart displaying geographic distribution mosquito observations. calculates proportional contributions regions labels missing regions “Unspecified”. function also takes input list matching structure returned creation_df(), ensuring consistent data formatting.instance, preparing data using preprocessing pipeline, user might call: functions produce interactive Plotly charts facilitate exploratory data analysis can seamlessly integrated reporting workflows.","code":"obs_complex_species_pie(data, threshold_prop_other = 0.05) #> Proportion de la catégorie 'Other' : 3.08% obs_region_pie(data,                 plot_dir = \"path/to/save/directory/\")"},{"path":"https://SwissTPH.github.io/AnophelesBionomics/articles/AnophelesBionomics.html","id":"to-build-the-model","dir":"Articles","previous_headings":"How to use the package","what":"To build the model","title":"AnophelesBionomics","text":"function run_stan() performs hierarchical Bayesian binomial modeling using rstan package estimate distribution bionomics, across mosquito species complexes. executes complete modeling workflow, includes preparing data format compatible Stan via prepare_stan_data() function, compiling Stan model, conducting sampling. default, model runs 2000 iterations per chain, including warmup (burn-) period 400 iterations, distributed four independent chains. parameters — including total number iterations, number chains, thinning interval applied posterior samples — can customized user control length quality sampling process. input data must cleaned dataset structured output creation_df() function, containing necessary variables, including species complex identifiers, required model fitting. Upon completion, function returns named list containing several components. important fit element, stanfit object representing fitted model. object provides access posterior distributions estimated parameters, allowing detailed inspection species- complex-level effects. example, function called summary fitted model parameters can viewed using returned elements include mapping species species complexes, user-friendly original variable names, details sampling parameters used. additional outputs primarily intended support downstream functions responsible displaying analyzing model results.","code":"run_stan_result <- run_stan(data, iter = 1000, chains = 3) #>  #> SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 1). #> Chain 1:  #> Chain 1: Gradient evaluation took 9.5e-05 seconds #> Chain 1: 1000 transitions using 10 leapfrog steps per transition would take 0.95 seconds. #> Chain 1: Adjust your expectations accordingly! #> Chain 1:  #> Chain 1:  #> Chain 1: Iteration:   1 / 1000 [  0%]  (Warmup) #> Chain 1: Iteration: 100 / 1000 [ 10%]  (Warmup) #> Chain 1: Iteration: 200 / 1000 [ 20%]  (Warmup) #> Chain 1: Iteration: 201 / 1000 [ 20%]  (Sampling) #> Chain 1: Iteration: 300 / 1000 [ 30%]  (Sampling) #> Chain 1: Iteration: 400 / 1000 [ 40%]  (Sampling) #> Chain 1: Iteration: 500 / 1000 [ 50%]  (Sampling) #> Chain 1: Iteration: 600 / 1000 [ 60%]  (Sampling) #> Chain 1: Iteration: 700 / 1000 [ 70%]  (Sampling) #> Chain 1: Iteration: 800 / 1000 [ 80%]  (Sampling) #> Chain 1: Iteration: 900 / 1000 [ 90%]  (Sampling) #> Chain 1: Iteration: 1000 / 1000 [100%]  (Sampling) #> Chain 1:  #> Chain 1:  Elapsed Time: 3.03 seconds (Warm-up) #> Chain 1:                4.688 seconds (Sampling) #> Chain 1:                7.718 seconds (Total) #> Chain 1:  #>  #> SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 2). #> Chain 2:  #> Chain 2: Gradient evaluation took 5.6e-05 seconds #> Chain 2: 1000 transitions using 10 leapfrog steps per transition would take 0.56 seconds. #> Chain 2: Adjust your expectations accordingly! #> Chain 2:  #> Chain 2:  #> Chain 2: Iteration:   1 / 1000 [  0%]  (Warmup) #> Chain 2: Iteration: 100 / 1000 [ 10%]  (Warmup) #> Chain 2: Iteration: 200 / 1000 [ 20%]  (Warmup) #> Chain 2: Iteration: 201 / 1000 [ 20%]  (Sampling) #> Chain 2: Iteration: 300 / 1000 [ 30%]  (Sampling) #> Chain 2: Iteration: 400 / 1000 [ 40%]  (Sampling) #> Chain 2: Iteration: 500 / 1000 [ 50%]  (Sampling) #> Chain 2: Iteration: 600 / 1000 [ 60%]  (Sampling) #> Chain 2: Iteration: 700 / 1000 [ 70%]  (Sampling) #> Chain 2: Iteration: 800 / 1000 [ 80%]  (Sampling) #> Chain 2: Iteration: 900 / 1000 [ 90%]  (Sampling) #> Chain 2: Iteration: 1000 / 1000 [100%]  (Sampling) #> Chain 2:  #> Chain 2:  Elapsed Time: 1.621 seconds (Warm-up) #> Chain 2:                1.268 seconds (Sampling) #> Chain 2:                2.889 seconds (Total) #> Chain 2:  #>  #> SAMPLING FOR MODEL 'anon_model' NOW (CHAIN 3). #> Chain 3:  #> Chain 3: Gradient evaluation took 5e-05 seconds #> Chain 3: 1000 transitions using 10 leapfrog steps per transition would take 0.5 seconds. #> Chain 3: Adjust your expectations accordingly! #> Chain 3:  #> Chain 3:  #> Chain 3: Iteration:   1 / 1000 [  0%]  (Warmup) #> Chain 3: Iteration: 100 / 1000 [ 10%]  (Warmup) #> Chain 3: Iteration: 200 / 1000 [ 20%]  (Warmup) #> Chain 3: Iteration: 201 / 1000 [ 20%]  (Sampling) #> Chain 3: Iteration: 300 / 1000 [ 30%]  (Sampling) #> Chain 3: Iteration: 400 / 1000 [ 40%]  (Sampling) #> Chain 3: Iteration: 500 / 1000 [ 50%]  (Sampling) #> Chain 3: Iteration: 600 / 1000 [ 60%]  (Sampling) #> Chain 3: Iteration: 700 / 1000 [ 70%]  (Sampling) #> Chain 3: Iteration: 800 / 1000 [ 80%]  (Sampling) #> Chain 3: Iteration: 900 / 1000 [ 90%]  (Sampling) #> Chain 3: Iteration: 1000 / 1000 [100%]  (Sampling) #> Chain 3:  #> Chain 3:  Elapsed Time: 1.379 seconds (Warm-up) #> Chain 3:                2.253 seconds (Sampling) #> Chain 3:                3.632 seconds (Total) #> Chain 3: #> Warning: There were 5 divergent transitions after warmup. See #> https://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup #> to find out why this is a problem and how to eliminate them. #> Warning: Examine the pairs() plot to diagnose sampling problems fit <- run_stan_result$fit summary_stats <- rstan::summary(fit)$summary head(summary_stats) #>                  mean     se_mean        sd       2.5%         25%         50% #> beta0     0.242517674 0.010188229 0.2707409 -0.2325045  0.04956901  0.21805878 #> beta1[1]  0.264495972 0.036804969 0.8847219 -1.4206958 -0.20620681  0.20570530 #> beta1[2]  0.021394340 0.009259912 0.3645550 -0.6723455 -0.21376572  0.01224399 #> beta1[3] -0.002061972 0.010614368 0.3618285 -0.6914079 -0.23164229 -0.01262263 #> beta1[4]  0.741534275 0.016675525 0.4083403 -0.0911462  0.48425768  0.76904928 #> beta1[5]  0.919185912 0.015601075 0.3376903  0.1271790  0.73218132  0.96572101 #>                75%     97.5%     n_eff      Rhat #> beta0    0.4118828 0.7961600  706.1720 1.0010189 #> beta1[1] 0.7001469 2.1272757  577.8308 1.0040190 #> beta1[2] 0.2474174 0.7569739 1549.9308 0.9995769 #> beta1[3] 0.2106222 0.7482801 1162.0300 1.0012850 #> beta1[4] 1.0137346 1.4545290  599.6330 1.0049012 #> beta1[5] 1.1464329 1.4693422  468.5199 1.0087756"},{"path":"https://SwissTPH.github.io/AnophelesBionomics/articles/AnophelesBionomics.html","id":"visualizing-posterior-densities-by-species-complex-plot_density","dir":"Articles","previous_headings":"How to use the package","what":"Visualizing Posterior Densities by Species Complex: plot_density()","title":"AnophelesBionomics","text":"plot_density() function used visualize posterior distributions model parameters fitting hierarchical Bayesian model via run_stan(). generates smooth density plots summarize uncertainty associated estimated parameter, grouped complex. visual summaries provide intuitive interpretable view model outputs. function expects input full named list returned run_stan(), includes fitted Stan model object (fit), mapping individual species associated complexes (species_complex), user-friendly variable label (nice_varname) used titling file naming. Line styles used distinguish levels: dotted lines genus-level parameters, long-dashed lines complexes-level, solid lines individual species-level. Colors drawn predefined palette, fallback default colors warnings certain groups defined. Users can optionally filter visualization include specific species complexes supplying vector complex_names argument. Parameters labeled “unlabeled” can excluded using “unlabel = TRUE” option. desired, final plot can also saved PNG file specifying valid path via plot_dir argument. example, assuming model already fitted stored object called stan_result, density plot can generated saved using following code:  funciton return combined ggplot object containing posterior density plots species complex shared legend. plot_dir specified, plot saved PNG image file.","code":"p <- plot_density(stan_results = run_stan_result,              complex_names = c(\"Gambiae\", \"Funestus\"),              unlabel = TRUE) #> Warning in get_plot_component(plot, \"guide-box\"): Multiple components found; #> returning the first one. To return all, use `return_all = TRUE`. print(p)"},{"path":"https://SwissTPH.github.io/AnophelesBionomics/articles/AnophelesBionomics.html","id":"extracting-posterior-summary-statistics","dir":"Articles","previous_headings":"How to use the package","what":"Extracting Posterior Summary Statistics","title":"AnophelesBionomics","text":"function species_complex_result() extracts summarizes posterior statistics hierarchical Bayesian model fitted using run_stan(). produces tidy data frame ready analysis reporting. summary includes formatted posterior estimates confidence intervals, variance measures, hierarchical metadata. important feature option set = TRUE, enables supplementation missing species complexes using taxonomy. case, species without direct data associated species complex data exist, function uses complex-level estimates. data available complex level, genus-level estimates used instead. hierarchical borrowing information ensures complete coverage. Two flags output help track process: data flag set TRUE estimate derived original observed data, FALSE otherwise. source_flag indicates level parameter estimate taken—whether directly species-level data, species complex, genus, supplemented externally. function expects input full named list output run_stan(), including fitted Stan model (fit), species--complex mapping (species_complex), original variable name (varname). Users can specify confidence level interval estimation, optionally save results CSV file providing output directory. example, assuming fitted model results stored object called stan_result, posterior summaries can extracted : call produces comprehensive table including credible intervals variance estimates taxonomic group, borrowing information hierarchically data missing, saves result CSV file. resulting data frame can used analysis, visualization, reporting purposes. order correct output Packae Anophles model, function Bionomics_For_Anophles_Model(). wraps extends logic species_complex_result(), applying sequentially five core bionomic traits: Parous rate (M, M.sd), Endophagy (endophagy, endophagy.sd), Endophily (endophily, endophily.sd), sac rate (A0, A0.sd), human blood index (Chi) Internally, parameters, fonction prepares data using creation_df(), runs hierarchical Bayesian model run_stan() extracts posterior summaries via internal function species_complex_result(). However, don’t need call steps individually: Bionomics_For_Anophles_Model() automates entire workflow. resulting table aggregates posterior means variances single, tidy data frame. function automatically standardizes species complex names ensure compatibility structure expected AnophelsModel package. includes renaming known variants (e.g., ‘Anopheles gambiae s.s.’ → ‘Anopheles gambiae’ → ‘Gambiae complex’). use , run: output format specifically designed plug directly AnophelsModel.","code":"summary_table <- species_complex_result(results = run_stan_result,                                        ci_level = 0.95,                                        all = TRUE) head(summary_table) #>                   name   level              estimate_ci     variance  ci_lower #> 1            Anopheles   genus 55.52% ± 36.06% (CI 95%) 3.013295e-02 0.1945526 #> 2             Funestus complex 71.03% ± 17.86% (CI 95%) 5.024724e-03 0.5317520 #> 3              Gambiae complex 58.89% ± 11.84% (CI 95%) 3.201060e-03 0.4705926 #> 4 Anopheles arabiensis species   48.99% ± 7.8% (CI 95%) 1.611226e-03 0.4131630 #> 5   Anopheles darlingi species  46.65% ± 3.23% (CI 95%) 2.685148e-04 0.4342010 #> 6   Anopheles funestus species  75.66% ± 1.76% (CI 95%) 7.674926e-05 0.7390068 #>    ci_upper                    complex data source_flag #> 1 0.8935260                       <NA> TRUE          NA #> 2 0.8129574                       <NA> TRUE          NA #> 3 0.6928048                       <NA> TRUE          NA #> 4 0.5679127                    Gambiae TRUE          NA #> 5 0.4987999 Anopheles darlingi_complex TRUE          NA #> 6 0.7731687                   Funestus TRUE          NA bionomics_df <- Bionomics_For_Anophles_Model() head(bionomics_df)"},{"path":[]},{"path":[]},{"path":[]},{"path":"https://SwissTPH.github.io/AnophelesBionomics/articles/AnophelesBionomics.html","id":"required-packages","dir":"Articles","previous_headings":"Appendix > 1. Packages use in AnophelesBionomics","what":"Required Packages","title":"AnophelesBionomics","text":"following packages required core functionalities package: stats dplyr ggplot2 rstan plotly utils coda","code":""},{"path":"https://SwissTPH.github.io/AnophelesBionomics/articles/AnophelesBionomics.html","id":"optional-packages","dir":"Articles","previous_headings":"Appendix > 1. Packages use in AnophelesBionomics","what":"Optional Packages","title":"AnophelesBionomics","text":"following packages needed interactive features: htmlwidgets shiny","code":""},{"path":"https://SwissTPH.github.io/AnophelesBionomics/articles/AnophelesBionomics.html","id":"species-and-complexes-included","dir":"Articles","previous_headings":"Appendix","what":"2. Species and complexes included","title":"AnophelesBionomics","text":"following full list Anopheles species species complexes included AnophelesBionomics package: Anopheles arabiensis Anopheles funestus complex Anopheles gambiae Anopheles gambiae complex Anopheles funestus Anopheles nili Anopheles moucheti Anopheles nili complex Anopheles melas Anopheles gambiae (Forest) Anopheles gambiae (Form M) Anopheles merus Anopheles nili (ovengensis) Anopheles carnevalei (nili) Anopheles gambiae (Form S) Anopheles gambiae (Savanna) Anopheles gambiae (Bamako) Anopheles gambiae (Mopti) Anopheles albimanus Anopheles darlingi Anopheles pseudopunctipennis complex Anopheles nuneztovari complex Anopheles albitarsis complex Anopheles aquasalis Anopheles albitarsis (marajoara formerly Sp C) Anopheles albitarsis (Sp. E) Anopheles nuneztovari(Sp. B/C) Anopheles albitarsis (formerly Sp ) Anopheles albitarsis (Sp. B) Anopheles quadrimaculatus complex Anopheles quadrimaculatus (formerly Sp. ) Anopheles freeborni Anopheles annularis complex Anopheles culicifacies complex Anopheles aconitus Anopheles subpictus complex Anopheles dirus complex Maculatus Group Anopheles minimus complex Anopheles fluviatilis complex Anopheles barbirostris complex Anopheles maculatus Anopheles barbirostris Anopheles flavirostris Anopheles sundaicus Anopheles sundaicus complex Anopheles sinensis Anopheles harrisoni (formerly minimus Sp. C) Anopheles dirus (formerly Sp. ) Anopheles minimus (formerly Sp. ) Anopheles balabacensis (leucosphyrus) Anopheles stephensi Anopheles anthropophagus (lesteri) Anopheles baimaii (formerly dirus Sp. D) Anopheles leucosphyrus Anopheles cracens (formerly dirus Sp. B) Anopheles fluviatilis (Sp.T) Anopheles culicifacies (Sp. ) Anopheles culicifacies (Sp. B) Anopheles culicifacies (Sp. C) Anopheles fluviatilis (Sp. S) Anopheles culicifacies (Sp. D) Anopheles epiroticus (formerly sundaicus Sp. ) Anopheles annularis Anopheles punctulatus complex Anopheles farauti complex Anopheles koliensis Anopheles latens (leucospyrus) Anopheles leucosphyrus complex Anopheles subpictus (Sp. B) Anopheles farauti (formerly .1) Anopheles punctulatus Anopheles farauti (. 4) Anopheles farauti (. 8) Anopheles fluviatilis (Sp. U) Anopheles annularis (Sp. ) Anopheles culicifacies (Sp. E) Anopheles splendidus Anopheles subpictus Anopheles nivipes Anopheles pseudojamesi Anopheles barbirostris s.l. Anopheles dirus s.l. Anopheles jamesii Anopheles kochi Anopheles maculatus s.l. Anopheles philippinensis Anopheles tessellatus Anopheles vagus Anopheles minimus s.l. Anopheles epiroticus","code":""},{"path":"https://SwissTPH.github.io/AnophelesBionomics/articles/AnophelesBionomics.html","id":"rules-to-add-data","dir":"Articles","previous_headings":"Appendix","what":"3. Rules to add data","title":"AnophelesBionomics","text":"successfully create dataset repository using create_repo(), dataset must include: species — mosquito species complex name. country — country data collected. year_start — Enables filtering time periods later. insecticide_control — “f” control “t” intervention. Optional recommended: source_id — unique identifier data source study. citation — Full citation study. pubmed_id — PubMed ID related study, NA available.","code":""},{"path":"https://SwissTPH.github.io/AnophelesBionomics/articles/AnophelesBionomics.html","id":"parous-rate","dir":"Articles","previous_headings":"Appendix > 3. Rules to add data","what":"Parous Rate","title":"AnophelesBionomics","text":"calculate parous rate, dataset must include: parity_n — Number parous mosquitoes (numerator). Use NA percentage available. parity_total — Total number mosquitoes dissected (denominator). parity_percent — Percentage; used estimate parity_n needed, NA otherwise. insecticide_control — Must “f”.","code":""},{"path":"https://SwissTPH.github.io/AnophelesBionomics/articles/AnophelesBionomics.html","id":"endophagy","dir":"Articles","previous_headings":"Appendix > 3. Rules to add data","what":"endophagy","title":"AnophelesBionomics","text":"calculate endophagy, dataset must include: indoor_biting_n — Number mosquitoes biting indoors. Use NA percentage available. indoor_biting_total — Total mosquitoes biting (indoor + outdoor). indoor_biting — Percentage; used estimate indoor_biting_n needed, NA otherwise. indoor_biting_sampling — Must “MBI”. outdoor_biting_sampling — Must “MBO”. HLC_same — Must TRUE, indicatting estimation used Human Landing Catches ( adults sit indoors outdoors legs exposed wait mosquito lands legs catch ). insecticide_control — Must “f”.","code":""},{"path":"https://SwissTPH.github.io/AnophelesBionomics/articles/AnophelesBionomics.html","id":"endophily","dir":"Articles","previous_headings":"Appendix > 3. Rules to add data","what":"endophily","title":"AnophelesBionomics","text":"calculate endophily, dataset must include: indoor_fed — Number mosquitoes resting indoors blood-fed. outdoor_fed — Number mosquitoes resting outdoors blood-fed. resting_unit — Must either “%” “count”. resting_unit “%”, also include: indoor_total — Total mosquitoes observed indoors. outdoor_total — Total mosquitoes observed outdoors. Additional required fields: indoor_resting_sampling — Must “HRI”. outdoor_resting_sampling — Must “WinExit”. WinExit_in_HRI_houses — Must TRUE. insecticide_control — Must “t”. Optionally, reconstructing totals: indoor_unfed, indoor_gravid outdoor_unfed, outdoor_gravid","code":""},{"path":"https://SwissTPH.github.io/AnophelesBionomics/articles/AnophelesBionomics.html","id":"sac-rate","dir":"Articles","previous_headings":"Appendix > 3. Rules to add data","what":"sac rate","title":"AnophelesBionomics","text":"calculate sac rate, dataset must include: parous_with_sac — parous females oviposited less 24 hours collected. `parous — Total number parous mosquitoes (denominator). sac_rate_percent — Percentage; used estimate parous_with_sac needed, NA otherwise. insecticide_control — Must “t”.","code":""},{"path":"https://SwissTPH.github.io/AnophelesBionomics/articles/AnophelesBionomics.html","id":"hbi","dir":"Articles","previous_headings":"Appendix > 3. Rules to add data","what":"HBI","title":"AnophelesBionomics","text":"calculate indoor human blood index (indoor HBI), dataset must include: indoor_host_n — Number mosquitoes ingested human blood indoors. indoor_host_total — Number mosquitoes examined blood meal origin indoors. indoor_host — Percentage; used estimate indoor_host_n needed, NA otherwise. indoor_host_sampling — Must one “HRI”, “ILT”, “WinExit”. host_unit — Must “AI” (animal index). insecticide_control — Must “f”. calculate outdoor human blood index (outdoor HBI), dataset must include: outdoor_host_n — Number mosquitoes ingested human blood outdoors. outdoor_host_total — Number mosquitoes examined blood meal origin outdoors. outdoor_host — Percentage; used estimate outdoor_host_n needed, NA otherwise. outdoor_host_sampling — Must one “RO”, “RO (shelter)”, “RO (pit)”, “WinExit”. host_unit — Must “AI” (animal index). insecticide_control — Must “f”. combined host sampling (separation indoor outdoor), dataset must also, well precedente colomns include: combined_host_n — Number mosquitoes ingested human blood. combined_host_total — Number mosquitoes examined blood meal origin. combined_host — Percentage; used estimate combined_host_n needed, NA otherwise. combined_host_sampling_n — Must “t”. combined_host_sampling_1 — Main sampling method used, must valid (different ““). insecticide_control — Must “f”.","code":""},{"path":"https://SwissTPH.github.io/AnophelesBionomics/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Aurélien Tarroux. Author, maintainer.","code":""},{"path":"https://SwissTPH.github.io/AnophelesBionomics/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Tarroux (2025). AnophelesBionomics: Analysis Tools Anopheles Mosquito Bionomics. R package version 0.1.0, https://SwissTPH.github.io/AnophelesBionomics.","code":"@Manual{,   title = {AnophelesBionomics: Analysis Tools for Anopheles Mosquito Bionomics},   author = {Aurélien Tarroux},   year = {2025},   note = {R package version 0.1.0},   url = {https://SwissTPH.github.io/AnophelesBionomics}, }"},{"path":[]},{"path":"https://SwissTPH.github.io/AnophelesBionomics/index.html","id":"presentation","dir":"","previous_headings":"","what":"Presentation","title":"Analysis Tools for Anopheles Mosquito Bionomics","text":"AnophelesBionomics R package provides tools estimate key mosquito bionomics parameters using Bayesian hierarchical model. model leverages taxonomic relationships—species, species complex, genus—strengthen inference, especially species-level data limited missing. model estimates several important bionomics parameters: parous rate, endophagy, endophily, human blood index (HBI),indoor HBI, outdoorHBI sac rate. Even absence specific data species, hierarchical structure allows model draw information related taxa. AnophelesBionomics supports internal user-provided datasets. also includes tools data preparation, model diagnostics, result exploration. package depends several R libraries core functionality, including stats, dplyr, ggplot2, rstan, plotly, coda, htmlwidgets, shiny, cowplot, rlang, stringr, tidyr. htmlwidgets ## Installation install package:","code":"# install.packages(\"devtools\") devtools::install_github(\"SwissTPH/AnophelesBionomics\")"},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/adding_data_extern.html","id":null,"dir":"Reference","previous_headings":"","what":"Add External Data to a Repository with Validation — adding_data_extern","title":"Add External Data to a Repository with Validation — adding_data_extern","text":"function checks whether external data includes required columns specific indicator type (`varname`) appends existing dataset repository (`repo`) validation passes.","code":""},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/adding_data_extern.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add External Data to a Repository with Validation — adding_data_extern","text":"","code":"adding_data_extern(varname, repo, extern_data)"},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/adding_data_extern.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add External Data to a Repository with Validation — adding_data_extern","text":"varname character string indicating type indicator validate. Supported values include: `\"parous_rate\"`, `\"endophagy\"`, `\"endophily\"`, `\"sac_rate\"`, `\"indoor_HBI\"`, `\"outdoor_HBI\"`, `\"HBI\"`. repo data frame representing current dataset repository external data appended. extern_data data frame containing external data validate append. data must contain required columns specified `varname`.","code":""},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/adding_data_extern.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add External Data to a Repository with Validation — adding_data_extern","text":"data frame combining original `repo` validated `extern_data`.         required columns missing, function stops informative error.","code":""},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/adding_data_extern.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add External Data to a Repository with Validation — adding_data_extern","text":"`varname` set required columns addition core fields like `species`, `insecticide_control`, `country`, `year_start`. `\"HBI\"`, function also checks columns required `\"HBI_indoor\"` `\"HBI_outdoor\"`.","code":""},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/adding_data_extern.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add External Data to a Repository with Validation — adding_data_extern","text":"","code":"repo <- data.frame(   species = character(),   insecticide_control = character(),   country = character(),   year_start = integer(),   parity_n = integer(),   parity_total = integer(),   parity_percent = numeric(),   stringsAsFactors = FALSE )  extern_data <- data.frame(   species = c(\"Anopheles arabiensis\", \"Anopheles arabiensis\"),   insecticide_control = c(\"f\", \"f\"),   country = c(\"Kenya\", \"Ethiopia\"),   year_start = c(2021, 2022),   parity_n = c(45, 30),   parity_total = c(100, 60),   parity_percent = c(45, 50),   stringsAsFactors = FALSE )  repo <- adding_data_extern(\"parous_rate\", repo, extern_data)"},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/augment_withProportion_modif.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Aggregated Numerator and Denominator Columns Based on Selected Variables — augment_withProportion_modif","title":"Add Aggregated Numerator and Denominator Columns Based on Selected Variables — augment_withProportion_modif","text":"Computes appends row-wise total denominators numerators specified variables. Optionally estimates missing numerators using available percentage values.","code":""},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/augment_withProportion_modif.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Aggregated Numerator and Denominator Columns Based on Selected Variables — augment_withProportion_modif","text":"","code":"augment_withProportion_modif(   df,   varname,   denominator_variables,   numerator_variables,   percentage_variables = NULL )"},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/augment_withProportion_modif.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Aggregated Numerator and Denominator Columns Based on Selected Variables — augment_withProportion_modif","text":"df `data.frame` tibble containing dataset. varname string used prefix name new columns (e.g., `HBI.num`, `HBI.den`). denominator_variables Character vector specifying column(s) sum denominator. numerator_variables Character vector specifying column(s) sum numerator. percentage_variables Optional character vector percentage column(s). provided, missing numerator values estimated using: numerator = denominator * percentage / 100.","code":""},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/augment_withProportion_modif.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Aggregated Numerator and Denominator Columns Based on Selected Variables — augment_withProportion_modif","text":"dataframe identical `df` two additional columns: <varname>.num Total numerator, estimated using percentages necessary. <varname>.den Total denominator. Zero values treated `NA`.","code":""},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/augment_with_taxonomy.html","id":null,"dir":"Reference","previous_headings":"","what":"Augment Dataset with Species-Complex Taxonomic Harmonization — augment_with_taxonomy","title":"Augment Dataset with Species-Complex Taxonomic Harmonization — augment_with_taxonomy","text":"Enriches dataset harmonized taxonomic information merging compatibility table generating synthetic entries needed. ensures observations mapped species level—even complex-level data available—prevents imbalances downstream statistical models.","code":""},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/augment_with_taxonomy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Augment Dataset with Species-Complex Taxonomic Harmonization — augment_with_taxonomy","text":"","code":"augment_with_taxonomy(data, compat)"},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/augment_with_taxonomy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Augment Dataset with Species-Complex Taxonomic Harmonization — augment_with_taxonomy","text":"data `data.frame` containing dataset augmented. Must include `survey` column, optionally `species` /`complex` columns. compat `data.frame` tibble providing taxonomic mapping `survey` identifiers, typically including `survey`, `species`, `complex` columns.","code":""},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/augment_with_taxonomy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Augment Dataset with Species-Complex Taxonomic Harmonization — augment_with_taxonomy","text":"named list two elements: `data` augmented dataset, harmonized species/complex names corresponding numeric IDs. `species_complex` reference tibble mapping unique species complex combinations numeric codes.","code":""},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/augment_with_taxonomy.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Augment Dataset with Species-Complex Taxonomic Harmonization — augment_with_taxonomy","text":"following steps applied ensure taxonomic consistency: Taxonomic Join: `compat` table joined input dataset via `survey` column. Synthetic Complex Names: `complex` missing (`\"\"`) given species, synthetic complex created     `\"[species]_complex\"`. Synthetic Species Names: entry missing `species` valid `complex`, pseudo-species generated     label `\"unlabel_[complex]\"` ensure rows treated species-level data. Numeric Identifiers: `speciesNb`: numeric ID (real synthetic) species. `complexNb`: numeric ID complex, offset 1 avoid overlap. steps normalize taxonomic granularity dataset, preventing - -representation records model estimation (e.g., intercepts like `beta0`).","code":""},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/Bionomics_For_Anophles_Model.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate Species-Specific Bionomic Traits for Anopheles Using a Hierarchical Bayesian Model — Bionomics_For_Anophles_Model","title":"Estimate Species-Specific Bionomic Traits for Anopheles Using a Hierarchical Bayesian Model — Bionomics_For_Anophles_Model","text":"function estimates various bionomic parameters (e.g., parous rate, endophagy, endophily, sac rate, human blood index) Anopheles mosquitoes three taxonomic levels: genus, species complex, species. fits hierarchical Bayesian model trait using Stan, merges results single tidy data frame.","code":""},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/Bionomics_For_Anophles_Model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate Species-Specific Bionomic Traits for Anopheles Using a Hierarchical Bayesian Model — Bionomics_For_Anophles_Model","text":"","code":"Bionomics_For_Anophles_Model()"},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/Bionomics_For_Anophles_Model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate Species-Specific Bionomic Traits for Anopheles Using a Hierarchical Bayesian Model — Bionomics_For_Anophles_Model","text":"`data.frame` containing bionomic estimates species complex, following columns: species_name Name species, complex, genus (e.g., `\"Anopheles gambiae\"`, `\"Gambiae complex\"`, `\"GENUS\"`). M, M.sd Parous rate standard deviation. endophagy, endophagy.sd Endophagy level standard deviation. endophily, endophily.sd Endophily level standard deviation. A0, A0.sd Sac rate standard deviation. Chi Human blood index (HBI)","code":""},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/Bionomics_For_Anophles_Model.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimate Species-Specific Bionomic Traits for Anopheles Using a Hierarchical Bayesian Model — Bionomics_For_Anophles_Model","text":"Internally, calls `creation_df()` prepare input data trait, `run_stan()` perform Bayesian inference using Stan. posterior summaries processed internal function aggregate results across levels impute missing species based known complexes genus-level data. function handles missing data imputing estimates based available data complex genus level. also performs name normalization (e.g., mapping `\"Anopheles gambiae s.s.\"` `\"Anopheles gambiae\"` `\"Anopheles gambiae\"` `\"Gambiae complex\"`). synthetic `\"Jamesii complex\"` row added based genus-level data. side-effect use `print()` statements model fitting indicate progress.","code":""},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/Bionomics_For_Anophles_Model.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Estimate Species-Specific Bionomic Traits for Anopheles Using a Hierarchical Bayesian Model — Bionomics_For_Anophles_Model","text":"function assumes `creation_df()` `run_stan()` defined environment return appropriately formatted data model results.","code":""},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/create_datareq.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter and Prepare Dataset for Proportion-Based Analysis — create_datareq","title":"Filter and Prepare Dataset for Proportion-Based Analysis — create_datareq","text":"Prepares dataset proportion-based analysis : Removing rows unknown insecticide intervention (requested), Renaming standardizing column names, Filtering rows missing numerators denominators, Warning numerator exceeds denominator.","code":""},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/create_datareq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter and Prepare Dataset for Proportion-Based Analysis — create_datareq","text":"","code":"create_datareq(data.req, varname, remove_unknown_insecticide = TRUE)"},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/create_datareq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter and Prepare Dataset for Proportion-Based Analysis — create_datareq","text":"data.req `data.frame` containing dataset. varname Character string; prefix used identify computed proportion columns (e.g., `\"endophily\"`, `\"parous_rate\"`). remove_unknown_insecticide Logical; `TRUE` (default), removes rows `insecticide_control` `\"t\"` unknown.","code":""},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/create_datareq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter and Prepare Dataset for Proportion-Based Analysis — create_datareq","text":"filtered cleaned dataframe, excluding rows missing denominators (optionally) unknown insecticide interventions.","code":""},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/create_datareq.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Filter and Prepare Dataset for Proportion-Based Analysis — create_datareq","text":"function assumes proportions already computed using augment_withProportion_modif, resulting columns like `<varname>.num` `<varname>.den`. Additional processing steps: `species` column renamed `survey`. Whitespace removed `insecticide_control` create new column `intervened`. warning issued rows `varname.num > varname.den`. total number valid observations printed.","code":""},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/create_repo.html","id":null,"dir":"Reference","previous_headings":"","what":"Create and Load the Combined Repository Dataset — create_repo","title":"Create and Load the Combined Repository Dataset — create_repo","text":"Loads, merges, enriches multiple bionomics datasets single comprehensive repository. function consolidates regional datasets, maps species taxonomic information, integrates additional data sources (e.g., endophily, supplemental studies, sac rate data), removes entries lacking taxonomic classification. Stops execution required columns missing.","code":""},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/create_repo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create and Load the Combined Repository Dataset — create_repo","text":"","code":"create_repo()"},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/create_repo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create and Load the Combined Repository Dataset — create_repo","text":"`data.frame` containing harmonized bionomics dataset multiple sources.","code":""},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/creation_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare Clean and Taxonomically Harmonized Dataset for Bayesian Modeling — creation_df","title":"Prepare Clean and Taxonomically Harmonized Dataset for Bayesian Modeling — creation_df","text":"Prepares cleaned processed dataset ready Bayesian analysis specified entomological variable. applies geographic temporal filters, computes proportions, cleans insecticide data, applies study-specific filters, harmonizes taxonomy, computes final outcome variable.","code":""},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/creation_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare Clean and Taxonomically Harmonized Dataset for Bayesian Modeling — creation_df","text":"","code":"creation_df(   varname,   geo = c(\"Africa-E\", \"Africa-W\", \"Americas\", \"Asia-Pacific\", NA),   year_min = -Inf,   year_max = +Inf,   extern_data = NULL )"},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/creation_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare Clean and Taxonomically Harmonized Dataset for Bayesian Modeling — creation_df","text":"varname Character string. variable interest. Supported values: `\"parous_rate\"`, `\"endophagy\"`, `\"endophily\"`, `\"indoor_HBI\"`, `\"outdoor_HBI\"`, `\"sac_rate\"`, `\"HBI\"` geo Character vector. Geographic regions continents include analysis. Defaults major regions: `c(\"Africa-E\", \"Africa-W\", \"Americas\", \"Asia-Pacific\", NA)`. year_min Integer numeric. Minimum year data collection (inclusive). Default `-Inf` (limit). year_max Integer numeric. Maximum year data collection (inclusive). Default `+Inf` (limit). extern_data Data frame. Optional user-supplied dataset append internal repository. Must follow structure internal dataset used `create_repo()`. Default `NULL`.","code":""},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/creation_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare Clean and Taxonomically Harmonized Dataset for Bayesian Modeling — creation_df","text":"named list containing: `data.req` fully prepared filtered dataset. `varname` variable name used processing. `nice_varname` Human-readable label variable interest. `species_complex` Reference table mapping species complexes numeric identifiers.","code":""},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/creation_df.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Prepare Clean and Taxonomically Harmonized Dataset for Bayesian Modeling — creation_df","text":"function orchestrates multiple preprocessing steps transform raw entomological survey data format suitable Bayesian analysis. user provides external dataset via `extern_data`, appended internal dataset filtering processing. steps follows: Loads raw data using `create_repo()`. `extern_data` provided, appended using `adding_data_extern()`. Sets variable-specific parameters via `set_var_params()`. Filters dataset specified geographic regions years using `region_period_filter()`. Computes numerators denominators proportions `augment_withProportion_modif()`. Removes keeps rows based unknown insecticide intervention using `create_datareq()`. Applies variable-specific epidemiological filters using `filter_bz_studies()`. Harmonizes taxonomy generates numeric IDs using `augment_with_taxonomy()`. Calculates outcome variable ratio numerator denominator. Internal checks stop execution early filtering steps remove observations.","code":""},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/filter_bz_studies.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter Studies Based on Barnabas Zogo Criteria — filter_bz_studies","title":"Filter Studies Based on Barnabas Zogo Criteria — filter_bz_studies","text":"Applies variable-specific filtering rules following methodological criteria defined Barnabas Zogo. filters help retain studies appropriate sampling methods analyzing specific entomological indicators endophagy, endophily, human blood index (HBI).","code":""},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/filter_bz_studies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter Studies Based on Barnabas Zogo Criteria — filter_bz_studies","text":"","code":"filter_bz_studies(datareq, varname, nice_varname)"},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/filter_bz_studies.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter Studies Based on Barnabas Zogo Criteria — filter_bz_studies","text":"datareq `data.frame` containing dataset filtered. varname character string indicating variable interest (e.g., `\"endophagy\"`, `\"endophily\"`, `\"outdoor_HBI\"`). nice_varname descriptive string (e.g., `\"Endophagy\"`, `\"Endophily\"`, `\"HBI\"`) determines filter rules applied.","code":""},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/filter_bz_studies.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter Studies Based on Barnabas Zogo Criteria — filter_bz_studies","text":"tibble filtered according variable-specific methodology.","code":""},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/filter_bz_studies.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Filter Studies Based on Barnabas Zogo Criteria — filter_bz_studies","text":"Filters applied nice_varname: Endophagy: Retains rows : `indoor_biting_sampling == \"MBI\"` `outdoor_biting_sampling == \"MBO\"` `HLC_same == TRUE` Endophily: Retains rows : `indoor_resting_sampling == \"HRI\"` `outdoor_resting_sampling == \"WinExit\"` `WinExit_in_HRI_houses == \"t\"` HBI: Removes rows `host_unit == \"AI\"`.     `varname == \"outdoor_HBI\"`, restricts `host_sampling` :     c(\"RO\", \"RO (shelter)\", \"RO (pit)\").","code":""},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/launch_density_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Launch Interactive Density Explorer for Stan Model — launch_density_app","title":"Launch Interactive Density Explorer for Stan Model — launch_density_app","text":"Starts Shiny app interactively explore posterior densities species complex.","code":""},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/launch_density_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Launch Interactive Density Explorer for Stan Model — launch_density_app","text":"","code":"launch_density_app(stan_results)"},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/launch_density_app.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Launch Interactive Density Explorer for Stan Model — launch_density_app","text":"stan_results list containing Stan model metadata (structure required `plot_density_interactive()`).","code":""},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/launch_density_app.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Launch Interactive Density Explorer for Stan Model — launch_density_app","text":"Launches Shiny application; return value.","code":""},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/launch_density_app.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Launch Interactive Density Explorer for Stan Model — launch_density_app","text":"app allows users select species complex, optionally exclude species \"unlabel\" names, view interactive plot normalized posterior densities.","code":""},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/multi_species_pie.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Multi-Species Pie Charts — multi_species_pie","title":"Generate Multi-Species Pie Charts — multi_species_pie","text":"function creates pie charts multiple species-related variables, visualizing proportion observations species. handles complex species labels, groups minor proportions \"\", applies custom color palette species.","code":""},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/multi_species_pie.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Multi-Species Pie Charts — multi_species_pie","text":"","code":"multi_species_pie(seuil_prop_autres = 0.05, plot_dir = \"path/to/your/folder/\")"},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/multi_species_pie.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Multi-Species Pie Charts — multi_species_pie","text":"seuil_prop_autres Numeric, default 0.05. Threshold grouping low-proportion species \"\". plot_dir Character, default \"c\"path///folder/\". Directory output PNG file saved.","code":""},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/multi_species_pie.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Multi-Species Pie Charts — multi_species_pie","text":"function return value saves plot PNG file.","code":""},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/multi_species_pie.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate Multi-Species Pie Charts — multi_species_pie","text":"function processes set predefined variables (`endophagy`, `endophily`, `indoor_HBI`, `outdoor_HBI`, `parous_rate`, `sac_rate`) generates pie chart . Complex species names identified labeled separately. Colors assigned using custom palette loaded CSV file (`new_palette_density_plots.csv`). generated plots combined single grid shared legend. output saved PNG file named \"multi_species_piechart.png\" specified directory.","code":""},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/obs_complex_species_pie.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a Pie Chart of Observations by Species or Complex — obs_complex_species_pie","title":"Generate a Pie Chart of Observations by Species or Complex — obs_complex_species_pie","text":"Creates interactive pie chart showing distribution observations species species complexes, based specified observation variable pre-processed dataset. Optionally groups species small proportion observations \"\" category, can save plot HTML file sharing embedding.","code":""},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/obs_complex_species_pie.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a Pie Chart of Observations by Species or Complex — obs_complex_species_pie","text":"","code":"obs_complex_species_pie(data, threshold_prop_other = 0.05, plot_dir = NULL)"},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/obs_complex_species_pie.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a Pie Chart of Observations by Species or Complex — obs_complex_species_pie","text":"data list containing following elements: - `data.req`: data frame observation data. Must contain column   named pattern `<varname>.den` (e.g., `\"parous_rate.den\"`). - `varname`: character string indicating base name observation variable. - `nice_varname`: character string used naming saved output file. threshold_prop_other numeric value 0 1 indicating minimum proportion total observations required species complex appear slice pie chart. Species threshold grouped \"\". Default 0.05 (5 percent). plot_dir Optional. character string giving directory path HTML version pie chart saved. `NULL`, chart saved. Default specific folder user's system.","code":""},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/obs_complex_species_pie.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a Pie Chart of Observations by Species or Complex — obs_complex_species_pie","text":"list containing:   - `plotly`: interactive pie chart showing distribution observations.   - `HTML file`: `plot_dir` provided, chart also saved HTML file.","code":""},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/obs_complex_species_pie.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate a Pie Chart of Observations by Species or Complex — obs_complex_species_pie","text":"- Species names starting `\"unlabel_\"` treated complexes labeled accordingly. - observation variable used calculation must match pattern `<varname>.den`. - pie chart uses **plotly** interactive visualization **htmlwidgets** export.","code":""},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/obs_region_pie.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a Pie Chart of Observations by Region — obs_region_pie","title":"Generate a Pie Chart of Observations by Region — obs_region_pie","text":"Generates interactive pie chart showing distribution observations region using Plotly. slice pie represents region, proportions based sum specified observation variable.","code":""},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/obs_region_pie.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a Pie Chart of Observations by Region — obs_region_pie","text":"","code":"obs_region_pie(data, plot_dir = NULL)"},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/obs_region_pie.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a Pie Chart of Observations by Region — obs_region_pie","text":"data list containing: - `data.req`: data frame includes column `region`, numeric column `value`,   observation count column named `varname.den`. - `varname`: base name variable interest (e.g., \"n\"). - `nice_varname`: human-readable version variable name (unused function). plot_dir Optional string. Directory path plot saved HTML file. `NULL` (default), plot saved.","code":""},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/obs_region_pie.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a Pie Chart of Observations by Region — obs_region_pie","text":"Plotly pie chart object representing proportion observations per region.   Optionally saves chart HTML file `plot_dir` provided.","code":""},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/obs_region_pie.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate a Pie Chart of Observations by Region — obs_region_pie","text":"function: - Replaces missing region values `\"Unspecified\"`. - Aggregates data region compute total observations, number rows, mean standard deviation `value`. - Calculates proportion total observations region. - Assigns colors using rainbow palette (unless `colors_map` already exists environment). - Builds interactive pie chart detailed hover text labels.","code":""},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/plot_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Posterior Density Plots by Species Complex — plot_density","title":"Generate Posterior Density Plots by Species Complex — plot_density","text":"function creates posterior density plots hierarchical Bayesian model parameters aggregated species complex. uses stanfit object associated data generated `run_stan()`. plot can optionally saved specified directory.","code":""},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/plot_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Posterior Density Plots by Species Complex — plot_density","text":"","code":"plot_density(   stan_results,   unlabel = FALSE,   plot_dir = NULL,   complex_names = NULL )"},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/plot_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Posterior Density Plots by Species Complex — plot_density","text":"stan_results Named list output `run_stan()` containing fitted model related data. unlabel Logical. TRUE, removes labels plot. Default FALSE. plot_dir Optional character. Directory path save plot image. NULL, plot saved. complex_names Optional character vector. Names species complexes include plot. NULL, included.","code":""},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/prepare_data_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Format MCMC Samples for Visualization — prepare_data_density","title":"Format MCMC Samples for Visualization — prepare_data_density","text":"Converts MCMC samples hierarchical Bayesian model tidy (long-format) `data.frame` enriched taxonomic information. function identifies level (species, complex, genus), assigns names based taxonomy, maps groupings later plotting.","code":""},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/prepare_data_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format MCMC Samples for Visualization — prepare_data_density","text":"","code":"prepare_data_density(stan_results)"},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/prepare_data_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format MCMC Samples for Visualization — prepare_data_density","text":"stan_results list containing MCMC results metadata, expected include: samples object class `mcmc.list` (posterior samples species- complex-level parameters). chain_length Integer. Total number MCMC iterations per chain. burnin Integer. Number initial iterations discard. thinning Integer. Thinning interval used sampling. species_complex `data.frame` mapping species complexes columns `species`, `complex`, `speciesNb`, `complexNb`.","code":""},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/prepare_data_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format MCMC Samples for Visualization — prepare_data_density","text":"`data.frame` long format following columns: `value` Posterior sample value. `Nb` Index number parameter (species complex ID). `level` Level parameter: `\"species\"`, `\"complex\"`, `\"genus\"`. `name` Name species, complex, `\"GENUS\"` (group-level effect). `higher_level` Grouping label: complex name species, self-name complex/genus.","code":""},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/prepare_data_density.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Format MCMC Samples for Visualization — prepare_data_density","text":"Species-level parameters assumed named `p2[...]` complex-level parameters `p1[...]`. special case handled `p1[1]` represents genus-level intercept. function processes indices variable names using regular expressions, joins taxonomic metadata using `species_complex`.","code":""},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/prepare_stan_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Format Species-Level Data for Hierarchical Stan Model — prepare_stan_data","title":"Format Species-Level Data for Hierarchical Stan Model — prepare_stan_data","text":"Prepares species-level binomial data hierarchical Bayesian model Stan. Converts dataset species complex identifiers counts list formatted Stan input. model infers complex-level effects species-level observations.","code":""},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/prepare_stan_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format Species-Level Data for Hierarchical Stan Model — prepare_stan_data","text":"","code":"prepare_stan_data(data.req, varname)"},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/prepare_stan_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format Species-Level Data for Hierarchical Stan Model — prepare_stan_data","text":"data.req data frame species-level observations. Must include `speciesNb`, `complexNb`, count columns `<varname>.num` (successes) `<varname>.den` (trials). varname Character. Name target variable (e.g., `\"HBI\"`, `\"endophagy\"`). Used identify numerator denominator columns.","code":""},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/prepare_stan_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format Species-Level Data for Hierarchical Stan Model — prepare_stan_data","text":"named list components: `N_species_obs` Number species-level observations (rows). `N_species` Number unique species. `N_complexes` Number unique complexes. `r_species` Vector observed counts successes per observation. `N_species_` Vector total counts (trials) per observation. `species_id` Integer vector mapping observation species ID. `species_complex` Integer vector mapping species complex ID.","code":""},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/read_data_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a CSV File from the Package's Internal Data Directory — read_data_file","title":"Read a CSV File from the Package's Internal Data Directory — read_data_file","text":"function reads CSV similarly formatted data file located package's `inst/extdata/` directory. safely constructs file path returns content data frame.","code":""},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/read_data_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a CSV File from the Package's Internal Data Directory — read_data_file","text":"","code":"read_data_file(filename, sep = \",\")"},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/read_data_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a CSV File from the Package's Internal Data Directory — read_data_file","text":"filename Character string. name file read, including extension (e.g., `\"mydata.csv\"`). sep Character string. field separator used file. Defaults `\",\"`.","code":""},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/read_data_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a CSV File from the Package's Internal Data Directory — read_data_file","text":"data frame containing data read specified file.","code":""},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/read_data_file.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read a CSV File from the Package's Internal Data Directory — read_data_file","text":"function useful accessing example datasets reference tables shipped within package without requiring users manually specify full file paths. verifies file exists inside package attempting read .","code":""},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/read_data_file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read a CSV File from the Package's Internal Data Directory — read_data_file","text":"","code":"if (FALSE) { # \\dontrun{ df <- read_data_file(\"countries_continent_region.csv\", sep = \";\") } # }"},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/region_period_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter Dataset by Geographic Region and Time Period — region_period_filter","title":"Filter Dataset by Geographic Region and Time Period — region_period_filter","text":"Enhances filters repository dataset based specified geographic regions defined time window. Regional information added merging external country--region mapping file.","code":""},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/region_period_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter Dataset by Geographic Region and Time Period — region_period_filter","text":"","code":"region_period_filter(   repo,   geo = c(\"Africa-E\", \"Africa-W\", \"Americas\", \"Asia-Pacific\", NA),   year_min = -Inf,   year_max = +Inf )"},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/region_period_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter Dataset by Geographic Region and Time Period — region_period_filter","text":"repo `data.frame` tibble containing input dataset. Must include `country` column. geo Character vector region names retain. Defaults common -defined macro-regions: `\"Africa-E\"`, `\"Africa-W\"`, `\"Americas\"`, `\"Asia-Pacific\"`, `NA`. year_min Integer numeric. Minimum year include (inclusive). Defaults `-Inf` (lower bound). year_max Integer numeric. Maximum year include (inclusive). Defaults `Inf` (upper bound).","code":""},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/region_period_filter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter Dataset by Geographic Region and Time Period — region_period_filter","text":"filtered dataframe including rows matching selected region(s) within defined time period.","code":""},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/region_period_filter.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Filter Dataset by Geographic Region and Time Period — region_period_filter","text":"function uses file named `\"countries_continent_region.csv\"` (semicolon-separated)   must include least two columns: `country` `region`.","code":""},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/required_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"Ensure Required Columns Are Present in a Data Frame — required_cols","title":"Ensure Required Columns Are Present in a Data Frame — required_cols","text":"utility function checks whether expected columns present given data frame. particularly useful validating user input internal data structures within package, helping prevent downstream errors caused missing variables.","code":""},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/required_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ensure Required Columns Are Present in a Data Frame — required_cols","text":"","code":"required_cols(df, expected, name)"},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/required_cols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ensure Required Columns Are Present in a Data Frame — required_cols","text":"df data frame checked. expected character vector expected column names. name character string indicating name source data frame (used error message).","code":""},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/required_cols.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ensure Required Columns Are Present in a Data Frame — required_cols","text":"function return anything. throws error required columns missing.","code":""},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/required_cols.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ensure Required Columns Are Present in a Data Frame — required_cols","text":"","code":"required_cols(data.frame(a = 1, b = 2), c(\"a\", \"b\"), \"example_df\") # OK if (FALSE) { # \\dontrun{ required_cols(data.frame(a = 1), c(\"a\", \"b\"), \"example_df\") # Error } # }"},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/run_stan.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Hierarchical Bayesian Model with rstan — run_stan","title":"Run Hierarchical Bayesian Model with rstan — run_stan","text":"Loads, filters, formats data, compiles runs hierarchical Bayesian binomial model using Stan. model estimates species-level proportions within species complexes, accounting hierarchical structure covariates region year.","code":""},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/run_stan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Hierarchical Bayesian Model with rstan — run_stan","text":"","code":"run_stan(data = data, iter = 2000, chains = 4, thinning = 1)"},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/run_stan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run Hierarchical Bayesian Model with rstan — run_stan","text":"data clean generated creation_df() iter Integer. Total number MCMC iterations per chain (including warmup). Default 2000. chains Integer. Number MCMC chains. Default 4. thinning Integer. Thinning interval posterior samples. Default 1.","code":""},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/run_stan.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run Hierarchical Bayesian Model with rstan — run_stan","text":"named list containing: `fit` `rstan` `stanfit` object fitted model posterior samples. `species_complex` Data frame vector linking species complexes used model. `nice_varname` User-friendly variable name labeling plotting. `varname` original variable name input. `iter` Number iterations used sampling. `warmup` Number warmup (burn-) iterations. `thinning` Thinning interval applied sampling.","code":""},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/run_stan.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run Hierarchical Bayesian Model with rstan — run_stan","text":"function calls `creation_df()` filter preprocess data, prepares Stan-compatible data using `prepare_stan_data()`. Stan model file `\"Hierarchical_Model.stan\"` loaded package directory, compiled, sampled specified MCMC parameters. Recommended control parameters `adapt_delta = 0.99` `max_treedepth = 15` improve convergence. Warmup set 20","code":""},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/set_var_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Parameters and Transform Data for a Given Variable — set_var_params","title":"Set Parameters and Transform Data for a Given Variable — set_var_params","text":"Configures variable-specific parameters applies necessary transformations dataset based variable interest. includes defining numerator/denominator columns, computing derived metrics needed, filtering, restructuring repository.","code":""},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/set_var_params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Parameters and Transform Data for a Given Variable — set_var_params","text":"","code":"set_var_params(varname, repo)"},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/set_var_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Parameters and Transform Data for a Given Variable — set_var_params","text":"varname string specifying variable analyze. Supported values: `\"parous_rate\"`, `\"endophagy\"`, `\"endophily\"`, `\"indoor_HBI\"`, `\"outdoor_HBI\"`, `\"sac_rate\"`, `\"HBI\"`. repo `data.frame` containing repository data process.","code":""},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/set_var_params.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set Parameters and Transform Data for a Given Variable — set_var_params","text":"named list containing: nice_varname Human-readable name variable denominator_variables Name denominator column numerator_variables Name numerator column percentage_variables Name percentage column (NULL applicable) remove_unknown_insecticide Logical flag indicating whether exclude unknown insecticide data repo (Optional) Transformed repository data.frame HBI derived variables","code":""},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/species_complex_result.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Summary Statistics from Stan Model Results — species_complex_result","title":"Extract Summary Statistics from Stan Model Results — species_complex_result","text":"function extracts summarizes posterior estimates fitted Stan model, organizing results taxonomic levels: genus, species complex, species. calculates means, variances, confidence intervals, formats estimates confidence intervals, optionally includes species complexes compatibility repository. output tidy data.frame suitable analysis reporting.","code":""},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/species_complex_result.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Summary Statistics from Stan Model Results — species_complex_result","text":"","code":"species_complex_result(results, ci_level = 0.95, all = TRUE, output_dir = NULL)"},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/species_complex_result.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Summary Statistics from Stan Model Results — species_complex_result","text":"results list containing Stan fit results species metadata. Must include: - `fit`: fitted Stan model object (class `stanfit`), - `species_complex`: data frame linking species complexes indices. ci_level Numeric value 0 1 specifying confidence interval level (default 0.95). Logical indicating whether include species complexes external compatibility repository (default TRUE). output_dir Optional character. Directory path save CSV. NULL, plot saved.","code":""},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/species_complex_result.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Summary Statistics from Stan Model Results — species_complex_result","text":"data.frame summarized posterior statistics including:   - `name`: Taxonomic unit name (genus, complex, species),   - `level`: Taxonomic level (\"genus\", \"complex\", \"species\"),   - `estimate_ci`: Formatted estimate confidence interval percentage string,   - `variance`: Variance estimate,   - `ci_lower`: Lower bound confidence interval,   - `ci_upper`: Upper bound confidence interval,   - additional metadata columns `= TRUE`.","code":""},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/species_complex_result.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract Summary Statistics from Stan Model Results — species_complex_result","text":"function first extracts summary statistics Stan fit object, including means, standard deviations, confidence intervals parameters representing genus, complex, species levels. maps parameters species complex names using `species_complex` data frame. Unlabelled species handled according complex membership. `= TRUE`, missing species complexes supplemented based compatibility repository ensure completeness.","code":""},{"path":"https://SwissTPH.github.io/AnophelesBionomics/reference/species_complex_result.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Summary Statistics from Stan Model Results — species_complex_result","text":"","code":"if (FALSE) { # \\dontrun{ # Assuming `stan_results` is a list with the required components: summary_df <- extract_stan_summary(   results = stan_results,   ci_level = 0.95,   all = TRUE ) } # }"}]
